---
openapi: 3.0.1
info:
  title: Saayer API
  version: v-17
servers:
  - url: "/saayer-6/dev"
paths:
  "/api/Accounting/create-payment":
    post:
      tags:
        - Accounting
      parameters:
        - name: Api-Key
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - "$ref": "#/components/schemas/PaymentAddDto"
          text/json:
            schema:
              allOf:
                - "$ref": "#/components/schemas/PaymentAddDto"
          application/*+json:
            schema:
              allOf:
                - "$ref": "#/components/schemas/PaymentAddDto"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/CreatePaymentResponse"
            application/json:
              schema:
                "$ref": "#/components/schemas/CreatePaymentResponse"
            text/json:
              schema:
                "$ref": "#/components/schemas/CreatePaymentResponse"
  "/api/AddressLookups/Countries":
    get:
      tags:
        - AddressLookups
      parameters:
        - name: Api-Key
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/AddressLookUpDto"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/AddressLookUpDto"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/AddressLookUpDto"
  "/api/AddressLookups/Governorates/{countryId}":
    get:
      tags:
        - AddressLookups
      parameters:
        - name: countryId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: Api-Key
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/AddressLookUpDto"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/AddressLookUpDto"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/AddressLookUpDto"
  "/api/AddressLookups/Cities/{governorateId}":
    get:
      tags:
        - AddressLookups
      parameters:
        - name: governorateId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: Api-Key
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/AddressLookUpDto"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/AddressLookUpDto"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/AddressLookUpDto"
  "/api/AddressLookups/Areas/{cityId}":
    get:
      tags:
        - AddressLookups
      parameters:
        - name: cityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: Api-Key
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/AddressLookUpDto"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/AddressLookUpDto"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/AddressLookUpDto"
  "/api/Auth/signup-client":
    post:
      tags:
        - Auth
      parameters:
        - name: Api-Key
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - "$ref": "#/components/schemas/LoginRequestDto"
          text/json:
            schema:
              allOf:
                - "$ref": "#/components/schemas/LoginRequestDto"
          application/*+json:
            schema:
              allOf:
                - "$ref": "#/components/schemas/LoginRequestDto"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/LoginResponseDto"
            application/json:
              schema:
                "$ref": "#/components/schemas/LoginResponseDto"
            text/json:
              schema:
                "$ref": "#/components/schemas/LoginResponseDto"
  "/api/Auth/token":
    post:
      tags:
        - Auth
      parameters:
        - name: Api-Key
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - "$ref": "#/components/schemas/TokenRequestDto"
          text/json:
            schema:
              allOf:
                - "$ref": "#/components/schemas/TokenRequestDto"
          application/*+json:
            schema:
              allOf:
                - "$ref": "#/components/schemas/TokenRequestDto"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/TokenResponseDto"
            application/json:
              schema:
                "$ref": "#/components/schemas/TokenResponseDto"
            text/json:
              schema:
                "$ref": "#/components/schemas/TokenResponseDto"
  "/api/Auth":
    delete:
      tags:
        - Auth
      parameters:
        - name: Api-Key
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  "/api/Clients":
    get:
      tags:
        - Clients
      parameters:
        - name: Api-Key
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ClientGetDto"
            application/json:
              schema:
                "$ref": "#/components/schemas/ClientGetDto"
            text/json:
              schema:
                "$ref": "#/components/schemas/ClientGetDto"
    put:
      tags:
        - Clients
      parameters:
        - name: Api-Key
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - "$ref": "#/components/schemas/ClientAddDto"
          text/json:
            schema:
              allOf:
                - "$ref": "#/components/schemas/ClientAddDto"
          application/*+json:
            schema:
              allOf:
                - "$ref": "#/components/schemas/ClientAddDto"
      responses:
        '200':
          description: Success
  "/api/Customers":
    get:
      tags:
        - Customers
      parameters:
        - name: Api-Key
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CustomerGetDto"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CustomerGetDto"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CustomerGetDto"
    put:
      tags:
        - Customers
      parameters:
        - name: Api-Key
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - "$ref": "#/components/schemas/CustomerAddDto"
          text/json:
            schema:
              allOf:
                - "$ref": "#/components/schemas/CustomerAddDto"
          application/*+json:
            schema:
              allOf:
                - "$ref": "#/components/schemas/CustomerAddDto"
      responses:
        '200':
          description: Success
    post:
      tags:
        - Customers
      parameters:
        - name: Api-Key
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - "$ref": "#/components/schemas/CustomerAddDto"
          text/json:
            schema:
              allOf:
                - "$ref": "#/components/schemas/CustomerAddDto"
          application/*+json:
            schema:
              allOf:
                - "$ref": "#/components/schemas/CustomerAddDto"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/CustomerGetDto"
            application/json:
              schema:
                "$ref": "#/components/schemas/CustomerGetDto"
            text/json:
              schema:
                "$ref": "#/components/schemas/CustomerGetDto"
  "/api/Customers/{id}":
    get:
      tags:
        - Customers
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: Api-Key
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/CustomerGetDto"
            application/json:
              schema:
                "$ref": "#/components/schemas/CustomerGetDto"
            text/json:
              schema:
                "$ref": "#/components/schemas/CustomerGetDto"
    delete:
      tags:
        - Customers
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: Api-Key
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  "/api/Customers/GetCustomersBy":
    post:
      tags:
        - Customers
      parameters:
        - name: Api-Key
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - "$ref": "#/components/schemas/CustomerQuery"
          text/json:
            schema:
              allOf:
                - "$ref": "#/components/schemas/CustomerQuery"
          application/*+json:
            schema:
              allOf:
                - "$ref": "#/components/schemas/CustomerQuery"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CustomerGetDto"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CustomerGetDto"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CustomerGetDto"
  "/api/Logistics/service-costs":
    post:
      tags:
        - Logistics
      parameters:
        - name: Api-Key
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - "$ref": "#/components/schemas/ShipmentCostObj"
          text/json:
            schema:
              allOf:
                - "$ref": "#/components/schemas/ShipmentCostObj"
          application/*+json:
            schema:
              allOf:
                - "$ref": "#/components/schemas/ShipmentCostObj"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ServiceCost"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ServiceCost"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ServiceCost"
  "/api/Logistics/services":
    get:
      tags:
        - Logistics
      parameters:
        - name: Api-Key
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/LogisticsServiceBase"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/LogisticsServiceBase"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/LogisticsServiceBase"
  "/api/Shipments":
    get:
      tags:
        - Shipments
      parameters:
        - name: Api-Key
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ShipmentGetDto"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ShipmentGetDto"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ShipmentGetDto"
    post:
      tags:
        - Shipments
      parameters:
        - name: Api-Key
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - "$ref": "#/components/schemas/ShipmentAddDto"
          text/json:
            schema:
              allOf:
                - "$ref": "#/components/schemas/ShipmentAddDto"
          application/*+json:
            schema:
              allOf:
                - "$ref": "#/components/schemas/ShipmentAddDto"
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ShipmentGetDto"
            application/json:
              schema:
                "$ref": "#/components/schemas/ShipmentGetDto"
            text/json:
              schema:
                "$ref": "#/components/schemas/ShipmentGetDto"
  "/api/Shipments/{id}":
    get:
      tags:
        - Shipments
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: Api-Key
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ShipmentGetDto"
            application/json:
              schema:
                "$ref": "#/components/schemas/ShipmentGetDto"
            text/json:
              schema:
                "$ref": "#/components/schemas/ShipmentGetDto"
    delete:
      tags:
        - Shipments
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: Api-Key
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  "/api/Shipments/getby":
    post:
      tags:
        - Shipments
      parameters:
        - name: Api-Key
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - "$ref": "#/components/schemas/ShipmentQuery"
          text/json:
            schema:
              allOf:
                - "$ref": "#/components/schemas/ShipmentQuery"
          application/*+json:
            schema:
              allOf:
                - "$ref": "#/components/schemas/ShipmentQuery"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ShipmentGetDto"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ShipmentGetDto"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ShipmentGetDto"
  "/api/Stores":
    get:
      tags:
        - Stores
      parameters:
        - name: Api-Key
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/StoreGetDto"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/StoreGetDto"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/StoreGetDto"
    put:
      tags:
        - Stores
      parameters:
        - name: Api-Key
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - "$ref": "#/components/schemas/StoreAddDto"
          text/json:
            schema:
              allOf:
                - "$ref": "#/components/schemas/StoreAddDto"
          application/*+json:
            schema:
              allOf:
                - "$ref": "#/components/schemas/StoreAddDto"
      responses:
        '200':
          description: Success
    post:
      tags:
        - Stores
      parameters:
        - name: Api-Key
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - "$ref": "#/components/schemas/StoreAddDto"
          text/json:
            schema:
              allOf:
                - "$ref": "#/components/schemas/StoreAddDto"
          application/*+json:
            schema:
              allOf:
                - "$ref": "#/components/schemas/StoreAddDto"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/StoreGetDto"
            application/json:
              schema:
                "$ref": "#/components/schemas/StoreGetDto"
            text/json:
              schema:
                "$ref": "#/components/schemas/StoreGetDto"
  "/api/Stores/{id}":
    get:
      tags:
        - Stores
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: Api-Key
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/StoreGetDto"
            application/json:
              schema:
                "$ref": "#/components/schemas/StoreGetDto"
            text/json:
              schema:
                "$ref": "#/components/schemas/StoreGetDto"
    delete:
      tags:
        - Stores
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: Api-Key
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
components:
  schemas:
    AddressCost_Logistics:
      type: object
      properties:
        addressDetails:
          type: string
          nullable: true
        countryCode:
          type: string
          nullable: true
        stateCode:
          type: string
          nullable: true
        countryName_en:
          type: string
          nullable: true
        governorateName_en:
          type: string
          nullable: true
        cityName_en:
          type: string
          nullable: true
        areaName_en:
          type: string
          nullable: true
      additionalProperties: false
    AddressLookUpDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name_en:
          type: string
          nullable: true
        name_ar:
          type: string
          nullable: true
      additionalProperties: false
    ClientAddDto:
      type: object
      properties:
        fullName:
          type: string
          nullable: true
        phoneNo:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        businessName:
          type: string
          nullable: true
      additionalProperties: false
    ClientGetDto:
      type: object
      properties:
        fullName:
          type: string
          nullable: true
        phoneNo:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        businessName:
          type: string
          nullable: true
      additionalProperties: false
    CreatePaymentResponse:
      type: object
      properties:
        hasError:
          type: boolean
        errorMessages:
          type: array
          items:
            "$ref": "#/components/schemas/ErrorMessage"
          nullable: true
      additionalProperties: false
    CustomerAddDto:
      type: object
      properties:
        addressDetails:
          type: string
          nullable: true
        zipcode:
          type: string
          nullable: true
        countryId:
          type: integer
          format: int32
        governorateId:
          type: integer
          format: int32
        cityId:
          type: integer
          format: int32
        areaId:
          type: integer
          format: int32
        customerId:
          type: integer
          format: int64
          nullable: true
        fullName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phoneNo:
          type: string
          nullable: true
        phoneNo2:
          type: string
          nullable: true
      additionalProperties: false
    CustomerGetDto:
      type: object
      properties:
        addressDetails:
          maxLength: 100
          minLength: 1
          type: string
          nullable: true
        zipcode:
          type: string
          nullable: true
        countryId:
          type: integer
          format: int32
        governorateId:
          type: integer
          format: int32
        cityId:
          type: integer
          format: int32
        areaId:
          type: integer
          format: int32
        citySplId:
          type: string
          nullable: true
        countryName_en:
          type: string
          nullable: true
        countryName_ar:
          type: string
          nullable: true
        countryCode:
          type: string
          nullable: true
        governorateName_en:
          type: string
          nullable: true
        governorateName_ar:
          type: string
          nullable: true
        cityName_en:
          type: string
          nullable: true
        cityName_ar:
          type: string
          nullable: true
        areaName_en:
          type: string
          nullable: true
        areaName_ar:
          type: string
          nullable: true
        customerId:
          type: integer
          format: int64
        fullName:
          type: string
          nullable: true
        phoneNo:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phoneNo2:
          type: string
          nullable: true
        totalShipments:
          type: integer
          format: int64
          nullable: true
        lastShipmentDate:
          type: string
          format: date-time
          nullable: true
        totalPaid:
          type: number
          format: double
          nullable: true
        totalGain:
          type: number
          format: double
          nullable: true
      additionalProperties: false
    CustomerQuery:
      type: object
      properties:
        general:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        countryId:
          type: integer
          format: int32
          nullable: true
        governorateId:
          type: integer
          format: int32
          nullable: true
        cityId:
          type: integer
          format: int32
          nullable: true
        totalShipmentsMin:
          type: integer
          format: int32
          nullable: true
        totalShipmentsMax:
          type: integer
          format: int32
          nullable: true
        skip:
          type: integer
          format: int32
          nullable: true
        take:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    Customer_ShipmentGetDto:
      type: object
      properties:
        addressDetails:
          type: string
          nullable: true
        countryName_en:
          type: string
          nullable: true
        countryName_ar:
          type: string
          nullable: true
        governorateName_en:
          type: string
          nullable: true
        governorateName_ar:
          type: string
          nullable: true
        cityName_en:
          type: string
          nullable: true
        cityName_ar:
          type: string
          nullable: true
        areaName_en:
          type: string
          nullable: true
        areaName_ar:
          type: string
          nullable: true
        fullName:
          type: string
          nullable: true
      additionalProperties: false
    ErrorCodes:
      enum:
        - Save_Payment
        - Update_Shipment_Status
        - Logistics_API
      type: string
    ErrorMessage:
      type: object
      properties:
        code:
          allOf:
            - "$ref": "#/components/schemas/ErrorCodes"
        message:
          type: string
          nullable: true
      additionalProperties: false
    LoginRequestDto:
      type: object
      properties:
        phoneNo:
          type: string
          nullable: true
      additionalProperties: false
    LoginResponseDto:
      type: object
      properties:
        verificationCode_temp:
          type: string
          nullable: true
      additionalProperties: false
    LogisticsServiceBase:
      type: object
      properties:
        name:
          type: string
          nullable: true
          readOnly: true
        company:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    PaymentAddDto:
      required:
        - amount
        - currency
        - fee
        - shipmentId
        - transactionId
      type: object
      properties:
        shipmentId:
          type: integer
          format: int64
        amount:
          type: number
          format: double
        currency:
          minLength: 1
          type: string
        fee:
          type: number
          format: double
        transactionId:
          minLength: 1
          type: string
        sourceCompany:
          type: string
          nullable: true
        sourceGateway_id:
          type: string
          nullable: true
        sourceMessage:
          type: string
          nullable: true
        sourceName:
          type: string
          nullable: true
        sourceNumber:
          type: string
          nullable: true
        sourceReference_Number:
          type: string
          nullable: true
        sourceType:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
      additionalProperties: false
    ServiceCost:
      type: object
      properties:
        name:
          type: string
          nullable: true
        company:
          type: string
          nullable: true
        cost:
          type: number
          format: double
        estimatedShipmentDays:
          type: string
          nullable: true
        hasError:
          type: boolean
        errorMessage:
          type: string
          nullable: true
      additionalProperties: false
    ShipmentAddDto:
      type: object
      properties:
        shipmentId:
          type: integer
          format: int64
          nullable: true
        length:
          type: number
          format: float
        height:
          type: number
          format: float
        width:
          type: number
          format: float
        weight:
          type: number
          format: float
        contentDesc:
          type: string
          nullable: true
        contentValue:
          type: number
          format: double
          nullable: true
        cost:
          type: number
          format: double
          nullable: true
        logisticServiceName:
          type: string
          nullable: true
        senderCustomerId:
          type: integer
          format: int64
          nullable: true
        receiverCustomerId:
          type: integer
          format: int64
          nullable: true
        senderStoreId:
          type: integer
          format: int64
          nullable: true
        receiverStoreId:
          type: integer
          format: int64
          nullable: true
      additionalProperties: false
    ShipmentCostObj:
      type: object
      properties:
        length:
          type: number
          format: float
        height:
          type: number
          format: float
        weight:
          type: number
          format: float
        width:
          type: number
          format: float
        contentDesc:
          type: string
          nullable: true
        contentValue:
          type: number
          format: double
          nullable: true
        senderAddress:
          allOf:
            - "$ref": "#/components/schemas/AddressCost_Logistics"
          nullable: true
        receiverAddress:
          allOf:
            - "$ref": "#/components/schemas/AddressCost_Logistics"
          nullable: true
      additionalProperties: false
    ShipmentGetDto:
      type: object
      properties:
        shipmentId:
          type: integer
          format: int64
        length:
          type: number
          format: float
        height:
          type: number
          format: float
        width:
          type: number
          format: float
        weight:
          type: number
          format: float
        contentDesc:
          type: string
          nullable: true
        contentValue:
          type: number
          format: double
          nullable: true
        cost:
          type: number
          format: double
          nullable: true
        createdAt:
          type: string
          format: date-time
        logisticServiceName:
          type: string
          nullable: true
        status:
          allOf:
            - "$ref": "#/components/schemas/ShipmentStatus"
          nullable: true
        senderCustomerId:
          type: integer
          format: int64
          nullable: true
        receiverCustomerId:
          type: integer
          format: int64
          nullable: true
        senderStoreId:
          type: integer
          format: int64
          nullable: true
        receiverStoreId:
          type: integer
          format: int64
          nullable: true
        senderCustomer:
          allOf:
            - "$ref": "#/components/schemas/Customer_ShipmentGetDto"
          nullable: true
        receiverCustomer:
          allOf:
            - "$ref": "#/components/schemas/Customer_ShipmentGetDto"
          nullable: true
        senderStore:
          allOf:
            - "$ref": "#/components/schemas/Store_ShipmentGetDto"
          nullable: true
        receiverStore:
          allOf:
            - "$ref": "#/components/schemas/Store_ShipmentGetDto"
          nullable: true
      additionalProperties: false
    ShipmentQuery:
      type: object
      properties:
        general:
          type: string
          nullable: true
        shippingDateFrom:
          type: string
          format: date-time
          nullable: true
        shippingDateTo:
          type: string
          format: date-time
          nullable: true
        logisticServiceName:
          type: string
          nullable: true
        status:
          allOf:
            - "$ref": "#/components/schemas/ShipmentStatus"
          nullable: true
        storeId:
          type: integer
          format: int64
          nullable: true
        isReturn:
          type: boolean
          nullable: true
        customerId:
          type: integer
          format: int64
          nullable: true
        skip:
          type: integer
          format: int32
          nullable: true
        take:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    ShipmentStatus:
      enum:
        - Pending
        - Paid
        - Requested
      type: string
    StoreAddDto:
      type: object
      properties:
        addressDetails:
          type: string
          nullable: true
        zipcode:
          type: string
          nullable: true
        countryId:
          type: integer
          format: int32
        governorateId:
          type: integer
          format: int32
        cityId:
          type: integer
          format: int32
        areaId:
          type: integer
          format: int32
        storeId:
          type: integer
          format: int64
          nullable: true
        name:
          type: string
          nullable: true
        financialRecordNumber:
          type: string
          nullable: true
        freelanceCertificateNumber:
          type: string
          nullable: true
        phoneNo:
          type: string
          nullable: true
      additionalProperties: false
    StoreGetDto:
      type: object
      properties:
        addressDetails:
          maxLength: 100
          minLength: 1
          type: string
          nullable: true
        zipcode:
          type: string
          nullable: true
        countryId:
          type: integer
          format: int32
        governorateId:
          type: integer
          format: int32
        cityId:
          type: integer
          format: int32
        areaId:
          type: integer
          format: int32
        citySplId:
          type: string
          nullable: true
        countryName_en:
          type: string
          nullable: true
        countryName_ar:
          type: string
          nullable: true
        countryCode:
          type: string
          nullable: true
        governorateName_en:
          type: string
          nullable: true
        governorateName_ar:
          type: string
          nullable: true
        cityName_en:
          type: string
          nullable: true
        cityName_ar:
          type: string
          nullable: true
        areaName_en:
          type: string
          nullable: true
        areaName_ar:
          type: string
          nullable: true
        storeId:
          type: integer
          format: int64
        name:
          type: string
          nullable: true
        financialRecordNumber:
          type: string
          nullable: true
        freelanceCertificateNumber:
          type: string
          nullable: true
        phoneNo:
          type: string
          nullable: true
      additionalProperties: false
    Store_ShipmentGetDto:
      type: object
      properties:
        addressDetails:
          type: string
          nullable: true
        countryName_en:
          type: string
          nullable: true
        countryName_ar:
          type: string
          nullable: true
        governorateName_en:
          type: string
          nullable: true
        governorateName_ar:
          type: string
          nullable: true
        cityName_en:
          type: string
          nullable: true
        cityName_ar:
          type: string
          nullable: true
        areaName_en:
          type: string
          nullable: true
        areaName_ar:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    TokenRequestDto:
      type: object
      properties:
        phoneNumber:
          type: string
          nullable: true
        verificationCode:
          type: string
          nullable: true
      additionalProperties: false
    TokenResponseDto:
      type: object
      properties:
        role:
          type: string
          nullable: true
        token:
          type: string
          nullable: true
        expiration:
          type: string
          format: date-time
      additionalProperties: false
  securitySchemes:
    bearer:
      type: http
      description: Put **_ONLY_** your JWT Bearer token on textbox below!
      scheme: Bearer
      bearerFormat: JWT
security:
  - bearer: []
